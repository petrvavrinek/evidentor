# Default target architecture is x64
ARG TARGETARCH=x64

FROM oven/bun:canary-debian AS build

ARG TARGETARCH

ENV DEBIAN_FRONTEND=noninteractive

# /app workdir
WORKDIR /app

# Copy everything into image
COPY ./apps/invoice-service ./apps/invoice-service
COPY ./packages/storage ./packages/storage
COPY ./packages/queues ./packages/queues
COPY ./packages/logging ./packages/logging

COPY ./bun.lock .
COPY ./package.json .

# Env to debug node-gyp build processes
ENV npm_config_loglevel=silly
ENV npm_config_verbose=true
ENV DEBUG=node-gyp
ENV V=1
ENV CXXFLAGS="-v"
ENV MAKEFLAGS="--debug=v"

# Install all packages
RUN bun install

ENV NODE_ENV=production

# Build application
RUN bun build \
    --compile \
    --minify \
    --target bun-linux-${TARGETARCH} \
    --outfile server \
    ./apps/invoice-service/src/main.ts

RUN echo "Build stage" ; ls -l

FROM debian:bookworm-slim

ENV DEBIAN_FRONTEND=noninteractive

# Install curl
RUN apt-get update && \
    apt-get install -y curl && \
    apt-get autoremove

WORKDIR /app

# Copy built server
COPY --from=build /app/server server

RUN echo "Run stage" ; ls -l

ENV NODE_ENV=production
ENV PORT=3000

CMD ["./server"]

# Expose port 3000
EXPOSE 3000
