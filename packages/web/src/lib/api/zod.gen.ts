// This file is auto-generated by @hey-api/openapi-ts

import { z } from "zod";

export const zClient = z.object({
  id: z.number().int().gte(-2147483648).lte(2147483647),
  companyName: z.string(),
  contactName: z.string(),
  email: z.union([z.string(), z.null()]),
  createdAt: z.unknown(),
});

export const zClient2 = z.array(
  z.object({
    id: z.number().int().gte(-2147483648).lte(2147483647),
    companyName: z.string(),
    contactName: z.string(),
    email: z.union([z.string(), z.null()]),
    createdAt: z.unknown(),
  }),
);

export const zProject = z.object({
  id: z.number().int().gte(-2147483648).lte(2147483647),
  title: z.union([z.string(), z.null()]),
  createdAt: z.unknown(),
  client: z.union([
    z.object({
      id: z.number().int().gte(-2147483648).lte(2147483647),
      companyName: z.string(),
      contactName: z.string(),
      email: z.union([z.string(), z.null()]),
      createdAt: z.unknown(),
    }),
    z.null(),
  ]),
});

export const zProject2 = z.array(
  z.object({
    id: z.number().int().gte(-2147483648).lte(2147483647),
    title: z.union([z.string(), z.null()]),
    createdAt: z.unknown(),
    client: z.union([
      z.object({
        id: z.number().int().gte(-2147483648).lte(2147483647),
        companyName: z.string(),
        contactName: z.string(),
        email: z.union([z.string(), z.null()]),
        createdAt: z.unknown(),
      }),
      z.null(),
    ]),
  }),
);

export const zTimeEntry = z.object({
  id: z.number().int().gte(-2147483648).lte(2147483647),
  title: z.union([z.string(), z.null()]),
  startAt: z.union([z.unknown(), z.null()]),
  endAt: z.union([z.unknown(), z.null()]),
  createdAt: z.unknown(),
  project: z.union([
    z.object({
      id: z.number().int().gte(-2147483648).lte(2147483647),
      title: z.union([z.string(), z.null()]),
      createdAt: z.unknown(),
      client: z.union([
        z.object({
          id: z.number().int().gte(-2147483648).lte(2147483647),
          companyName: z.string(),
          contactName: z.string(),
          email: z.union([z.string(), z.null()]),
          createdAt: z.unknown(),
        }),
        z.null(),
      ]),
    }),
    z.null(),
  ]),
  projectTask: z.union([
    z.object({
      id: z.number().int().gte(-2147483648).lte(2147483647),
      title: z.string(),
      description: z.union([z.string(), z.null()]),
      createdAt: z.unknown(),
    }),
    z.null(),
  ]),
});

export const zTimeEntry2 = z.array(
  z.object({
    id: z.number().int().gte(-2147483648).lte(2147483647),
    title: z.union([z.string(), z.null()]),
    startAt: z.union([z.unknown(), z.null()]),
    endAt: z.union([z.unknown(), z.null()]),
    createdAt: z.unknown(),
    project: z.union([
      z.object({
        id: z.number().int().gte(-2147483648).lte(2147483647),
        title: z.union([z.string(), z.null()]),
        createdAt: z.unknown(),
        client: z.union([
          z.object({
            id: z.number().int().gte(-2147483648).lte(2147483647),
            companyName: z.string(),
            contactName: z.string(),
            email: z.union([z.string(), z.null()]),
            createdAt: z.unknown(),
          }),
          z.null(),
        ]),
      }),
      z.null(),
    ]),
    projectTask: z.union([
      z.object({
        id: z.number().int().gte(-2147483648).lte(2147483647),
        title: z.string(),
        description: z.union([z.string(), z.null()]),
        createdAt: z.unknown(),
      }),
      z.null(),
    ]),
  }),
);

export const zProjectTask = z.object({
  id: z.number().int().gte(-2147483648).lte(2147483647),
  title: z.string(),
  description: z.union([z.string(), z.null()]),
  createdAt: z.unknown(),
  project: z.object({
    id: z.number().int().gte(-2147483648).lte(2147483647),
    title: z.union([z.string(), z.null()]),
    createdAt: z.unknown(),
    client: z.union([
      z.object({
        id: z.number().int().gte(-2147483648).lte(2147483647),
        companyName: z.string(),
        contactName: z.string(),
        email: z.union([z.string(), z.null()]),
        createdAt: z.unknown(),
      }),
      z.null(),
    ]),
  }),
});

export const zProjectTask2 = z.array(
  z.object({
    id: z.number().int().gte(-2147483648).lte(2147483647),
    title: z.string(),
    description: z.union([z.string(), z.null()]),
    createdAt: z.unknown(),
    project: z.object({
      id: z.number().int().gte(-2147483648).lte(2147483647),
      title: z.union([z.string(), z.null()]),
      createdAt: z.unknown(),
      client: z.union([
        z.object({
          id: z.number().int().gte(-2147483648).lte(2147483647),
          companyName: z.string(),
          contactName: z.string(),
          email: z.union([z.string(), z.null()]),
          createdAt: z.unknown(),
        }),
        z.null(),
      ]),
    }),
  }),
);

export const zUser = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  emailVerified: z.boolean().optional(),
  image: z.string().optional(),
  createdAt: z.unknown().optional(),
  updatedAt: z.unknown().optional(),
});

export const zSession = z.object({
  id: z.string().optional(),
  expiresAt: z.unknown().optional(),
  token: z.string().optional(),
  createdAt: z.unknown().optional(),
  updatedAt: z.unknown().optional(),
  ipAddress: z.string().optional(),
  userAgent: z.string().optional(),
  userId: z.string().optional(),
});

export const zAccount = z.object({
  id: z.string().optional(),
  accountId: z.string().optional(),
  providerId: z.string().optional(),
  userId: z.string().optional(),
  accessToken: z.string().optional(),
  refreshToken: z.string().optional(),
  idToken: z.string().optional(),
  accessTokenExpiresAt: z.unknown().optional(),
  refreshTokenExpiresAt: z.unknown().optional(),
  scope: z.string().optional(),
  password: z.string().optional(),
  createdAt: z.unknown().optional(),
  updatedAt: z.unknown().optional(),
});

export const zVerification = z.object({
  id: z.string().optional(),
  identifier: z.string().optional(),
  value: z.string().optional(),
  expiresAt: z.unknown().optional(),
  createdAt: z.unknown().optional(),
  updatedAt: z.unknown().optional(),
});

export const zGetClientResponse = zClient2;

export const zPostClientData = z.object({
  companyName: z.string(),
  contactName: z.string(),
  email: z.union([z.string(), z.null()]).optional(),
});

export const zPostClientResponse = zClient;

export const zDeleteClientByIdParameterId = z.number();

export const zGetClientByIdParameterId = z.number();

export const zGetClientByIdResponse = zClient;

export const zPatchClientByIdData = z.object({
  companyName: z.string().optional(),
  contactName: z.string().optional(),
  email: z.union([z.string(), z.null()]).optional(),
});

export const zPatchClientByIdParameterId = z.number();

export const zPatchClientByIdResponse = zClient;

export const zGetProjectResponse = zProject2;

export const zPostProjectData = z.object({
  clientId: z
    .union([z.number().int().gte(-2147483648).lte(2147483647), z.null()])
    .optional(),
  title: z.union([z.string(), z.null()]).optional(),
});

export const zPostProjectResponse = zProject;

export const zDeleteProjectByIdParameterId = z.number();

export const zGetProjectByIdParameterId = z.number();

export const zGetProjectByIdResponse = zProject;

export const zPatchProjectByIdData = z.object({
  clientId: z
    .union([z.number().int().gte(-2147483648).lte(2147483647), z.null()])
    .optional(),
  title: z.union([z.string(), z.null()]).optional(),
});

export const zPatchProjectByIdParameterId = z.number();

export const zGetTimeEntryActiveResponse = zTimeEntry;

export const zDeleteTimeEntryByIdParameterId = z.number();

export const zGetTimeEntryByIdParameterId = z.number();

export const zGetTimeEntryByIdResponse = zTimeEntry;

export const zPatchTimeEntryByIdData = z.object({
  title: z.string().optional(),
  projectId: z.union([z.number(), z.null()]).optional(),
  projectTaskId: z
    .union([z.number().int().gte(-2147483648).lte(2147483647), z.null()])
    .optional(),
  startAt: z.union([z.unknown(), z.string().datetime(), z.number()]).optional(),
  endAt: z
    .union([
      z.union([z.unknown(), z.string().datetime(), z.number()]),
      z.null(),
    ])
    .optional(),
});

export const zPatchTimeEntryByIdParameterId = z.number();

export const zPatchTimeEntryByIdResponse = zTimeEntry;

export const zGetTimeEntryResponse = zTimeEntry2;

export const zPostTimeEntryData = z.object({
  title: z.string(),
  projectId: z.union([z.number(), z.null()]),
  projectTaskId: z
    .union([z.number().int().gte(-2147483648).lte(2147483647), z.null()])
    .optional(),
  startAt: z.union([z.unknown(), z.string().datetime(), z.number()]),
  endAt: z.union([
    z.union([z.unknown(), z.string().datetime(), z.number()]),
    z.null(),
  ]),
});

export const zPostTimeEntryResponse = zTimeEntry;

export const zGetProjectTaskParameterProject = z.number();

export const zGetProjectTaskResponse = zProjectTask2;

export const zDeleteProjectTaskByIdParameterId = z.number();

export const zPatchProjectTaskByIdData = z.object({
  title: z.string().optional(),
  description: z.union([z.string(), z.null()]).optional(),
});

export const zPatchProjectTaskByIdParameterId = z.number();

export const zPostProjectTaskByIdData = z.object({
  title: z.string(),
  description: z.union([z.string(), z.null()]).optional(),
});

export const zPostProjectTaskByIdParameterId = z.number();

export const zPostProjectTaskByIdResponse = zProjectTask;

export const zSocialSignInData = z.object({
  callbackURL: z.string().optional(),
  newUserCallbackURL: z.string().optional(),
  errorCallbackURL: z.string().optional(),
  provider: z.string(),
  disableRedirect: z.string().optional(),
  idToken: z.string().optional(),
  scopes: z.string().optional(),
  requestSignUp: z.string().optional(),
  loginHint: z.string().optional(),
});

/**
 * Session response when idToken is provided
 */
export const zSocialSignInResponse = z.object({
  redirect: z.unknown(),
  token: z.string(),
});

/**
 * Success
 */
export const zGetAuthGetSessionResponse = z.object({
  session: zSession,
  user: zUser,
});

export const zPostAuthSignOutData = z.object({});

/**
 * Success
 */
export const zPostAuthSignOutResponse = z.object({
  success: z.boolean().optional(),
});

export const zPostAuthSignUpEmailData = z.object({
  name: z.string(),
  email: z.string(),
  password: z.string(),
  callbackURL: z.string().optional(),
});

/**
 * Successfully created user
 */
export const zPostAuthSignUpEmailResponse = z.object({
  token: z.string().optional(),
  user: z.object({
    id: z.string(),
    email: z.string().email(),
    name: z.string(),
    image: z.string().url().optional(),
    emailVerified: z.boolean(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
  }),
});

export const zPostAuthSignInEmailData = z.object({
  email: z.string(),
  password: z.string(),
  callbackURL: z.string().optional(),
  rememberMe: z.string().optional(),
});

/**
 * Session response when idToken is provided
 */
export const zPostAuthSignInEmailResponse = z.object({
  redirect: z.unknown(),
  token: z.string(),
  url: z.null().optional(),
  user: z.object({
    id: z.string(),
    email: z.string(),
    name: z.string().optional(),
    image: z.string().optional(),
    emailVerified: z.boolean(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
  }),
});

export const zPostAuthForgetPasswordData = z.object({
  email: z.string(),
  redirectTo: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthForgetPasswordResponse = z.object({
  status: z.boolean().optional(),
  message: z.string().optional(),
});

export const zPostAuthResetPasswordData = z.object({
  newPassword: z.string(),
  token: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthResetPasswordResponse = z.object({
  status: z.boolean().optional(),
});

/**
 * The token to verify the email
 */
export const zGetAuthVerifyEmailParameterToken = z.string();

/**
 * The URL to redirect to after email verification
 */
export const zGetAuthVerifyEmailParameterCallbackUrl = z.string();

/**
 * Success
 */
export const zGetAuthVerifyEmailResponse = z.object({
  user: z.object({
    id: z.string(),
    email: z.string(),
    name: z.string(),
    image: z.string(),
    emailVerified: z.boolean(),
    createdAt: z.string(),
    updatedAt: z.string(),
  }),
  status: z.boolean(),
});

export const zPostAuthSendVerificationEmailData = z.object({
  email: z.string(),
  callbackURL: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthSendVerificationEmailResponse = z.object({
  status: z.boolean().optional(),
});

export const zPostAuthChangeEmailData = z.object({
  newEmail: z.string(),
  callbackURL: z.string().optional(),
});

/**
 * Email change request processed successfully
 */
export const zPostAuthChangeEmailResponse = z.object({
  status: z.boolean(),
  message: z.enum(["Email updated", "Verification email sent"]).optional(),
});

export const zPostAuthChangePasswordData = z.object({
  newPassword: z.string(),
  currentPassword: z.string(),
  revokeOtherSessions: z.string().optional(),
});

/**
 * Password successfully changed
 */
export const zPostAuthChangePasswordResponse = z.object({
  token: z.string().optional(),
  user: z.object({
    id: z.string(),
    email: z.string().email(),
    name: z.string(),
    image: z.string().url().optional(),
    emailVerified: z.boolean(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
  }),
});

export const zPostAuthUpdateUserData = z.object({
  name: z.string().optional(),
  image: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthUpdateUserResponse = z.object({
  status: z.boolean().optional(),
});

export const zPostAuthDeleteUserData = z.object({
  callbackURL: z.string().optional(),
  password: z.string().optional(),
  token: z.string().optional(),
});

/**
 * User deletion processed successfully
 */
export const zPostAuthDeleteUserResponse = z.object({
  success: z.boolean(),
  message: z.enum(["User deleted", "Verification email sent"]),
});

/**
 * The URL to redirect the user to reset their password
 */
export const zGetAuthResetPasswordByTokenParameterCallbackUrl = z.string();

/**
 * Success
 */
export const zGetAuthResetPasswordByTokenResponse = z.object({
  token: z.string().optional(),
});

export const zPostAuthRequestPasswordResetData = z.object({
  email: z.string(),
  redirectTo: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthRequestPasswordResetResponse = z.object({
  status: z.boolean().optional(),
  message: z.string().optional(),
});

/**
 * Success
 */
export const zGetAuthListSessionsResponse = z.array(zSession);

export const zPostAuthRevokeSessionData = z.object({
  token: z.string(),
});

/**
 * Success
 */
export const zPostAuthRevokeSessionResponse = z.object({
  status: z.boolean(),
});

export const zPostAuthRevokeSessionsData = z.object({});

/**
 * Success
 */
export const zPostAuthRevokeSessionsResponse = z.object({
  status: z.boolean(),
});

export const zPostAuthRevokeOtherSessionsData = z.object({});

/**
 * Success
 */
export const zPostAuthRevokeOtherSessionsResponse = z.object({
  status: z.boolean(),
});

export const zPostAuthLinkSocialData = z.object({
  callbackURL: z.string().optional(),
  provider: z.string(),
  idToken: z.string().optional(),
  requestSignUp: z.string().optional(),
  scopes: z.string().optional(),
  errorCallbackURL: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthLinkSocialResponse = z.object({
  url: z.string().optional(),
  redirect: z.boolean(),
  status: z.boolean().optional(),
});

/**
 * Success
 */
export const zGetAuthListAccountsResponse = z.array(
  z.object({
    id: z.string().optional(),
    provider: z.string().optional(),
    createdAt: z.string().datetime().optional(),
    updatedAt: z.string().datetime().optional(),
  }),
);

export const zGetAuthDeleteUserCallbackParameterToken = z.string();

export const zGetAuthDeleteUserCallbackParameterCallbackUrl = z.string();

/**
 * User successfully deleted
 */
export const zGetAuthDeleteUserCallbackResponse = z.object({
  success: z.boolean(),
  message: z.enum(["User deleted"]),
});

export const zPostAuthUnlinkAccountData = z.object({
  providerId: z.string(),
  accountId: z.string().optional(),
});

/**
 * Success
 */
export const zPostAuthUnlinkAccountResponse = z.object({
  status: z.boolean().optional(),
});

export const zPostAuthRefreshTokenData = z.object({
  providerId: z.string(),
  accountId: z.string().optional(),
  userId: z.string().optional(),
});

/**
 * Access token refreshed successfully
 */
export const zPostAuthRefreshTokenResponse = z.object({
  tokenType: z.string().optional(),
  idToken: z.string().optional(),
  accessToken: z.string().optional(),
  refreshToken: z.string().optional(),
  accessTokenExpiresAt: z.string().datetime().optional(),
  refreshTokenExpiresAt: z.string().datetime().optional(),
});

export const zPostAuthGetAccessTokenData = z.object({
  providerId: z.string(),
  accountId: z.string().optional(),
  userId: z.string().optional(),
});

/**
 * A Valid access token
 */
export const zPostAuthGetAccessTokenResponse = z.object({
  tokenType: z.string().optional(),
  idToken: z.string().optional(),
  accessToken: z.string().optional(),
  refreshToken: z.string().optional(),
  accessTokenExpiresAt: z.string().datetime().optional(),
  refreshTokenExpiresAt: z.string().datetime().optional(),
});

export const zPostAuthAccountInfoData = z.object({
  accountId: z.string(),
});

/**
 * Success
 */
export const zPostAuthAccountInfoResponse = z.object({
  user: z.object({
    id: z.string(),
    name: z.string().optional(),
    email: z.string().optional(),
    image: z.string().optional(),
    emailVerified: z.boolean(),
  }),
  data: z.object({}),
});

/**
 * API is working
 */
export const zGetAuthOkResponse = z.object({
  ok: z.boolean(),
});

/**
 * The HTML content of the error page
 */
export const zGetAuthErrorResponse = z.string();
